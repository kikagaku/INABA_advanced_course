{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "1ae97a6c",
   "metadata": {},
   "source": [
    "# 【補足】 実力テスト - 機械学習セクション\n",
    "\n",
    "ポルトガルのある銀行のダイレクトマーケティングキャンペーンに関連したデータセットを使用します。  \n",
    "\n",
    "背景として顧客にダイレクトマーケティング（電話）をかけると1件辺り500円ほどのコストが発生するため、なるべく確度の高い顧客を見逃さないように当たりをつけてダイレクトマーケティング（電話）したいと考えています。キャンペーンの結果、どの顧客が定期預金を申し込むかを予測する（success, fail）モデルを作成してください。\n",
    "\n",
    "## データセット\n",
    "訓練・検証用のデータセットは [bank_train.csv](https://drive.google.com/file/d/12ASy6rFUxeko2qWix2wKl-mYkCLJ--bK/view?usp=sharing) を使用してください。  \n",
    "テスト用のデータセットは [bank_test.csv](https://drive.google.com/file/d/1G0d5gToN5eCSQG1C3k2hJQ6ildb_FuY9/view?usp=sharing) を使用してください。  \n",
    "\n",
    "結果を提出する際は、推論用データセット  [bank_pred.csv](https://drive.google.com/file/d/1-x2sNg5gIOzTaTs894cu8tUa044yfgUS/view?usp=sharing)を使用し、推論した結果を success, fail の文字列に変換し csv ファイルで提出してください。 \n",
    "\n",
    "## ゴール\n",
    "推論用のデータセットに対して、Recall が最も高いモデルを構築してください。また、推論結果を success,fail の文字列に変換し、csv ファイルにて提出してください。\n",
    "文字列の変換に関しては、以下のコードを参考にしてください。\n",
    "\n",
    "```python\n",
    "# 推論結果を、 success, fail に書き換える\n",
    "y_list = []\n",
    "for y in y_pred:\n",
    "  if y == '0':\n",
    "    f = y.replace(\"0\", 'fail')\n",
    "    y_list.append(f)\n",
    "  else:\n",
    "    s = y.replace(\"1\", 'success')\n",
    "    y_list.append(s)\n",
    "```\n",
    "\n",
    "csv ファイルの提出に関しては、以下のコードを参考にしてください。\n",
    "```python\n",
    "# Mac の方 \n",
    "pd.Series(y_list, name='pred').to_csv('submission.csv', index=None), \n",
    "# Windows の方\n",
    "pd.Series(y_list, name='pred').to_csv('submission.csv', index=None, line_terminator='\\n')\n",
    "```\n",
    "## 入力変数の説明\n",
    "\n",
    "| 列名      | 説明                                      |\n",
    "| --------- | ---------------------------------------- |\n",
    "| age       | 年齢                                  　　　　　　　　|\n",
    "| job       | 職業                             　　　　　　　　　　　　　　　　　　|\n",
    "| marital   | 既婚/未婚                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　|\n",
    "| education | 学歴                                      |\n",
    "| default   | 債務不履行の有無                            |\n",
    "| balance   | 預金の年間平均残高（単位：ユーロ）                |\n",
    "| housing   | 住宅ローンの有無                             |\n",
    "| loan      | 個人ローンの有無                             |\n",
    "| pdays     | 前回のキャンペーンで通話してからの経過日数（単位：日） |\n",
    "| previous  | 本キャンペーン以前に通話した回数（単位：回）         |\n",
    "| poutcome  | 前回キャンペーンの成約状況                     |\n",
    "| result    | 本キャンペーンの結果（１⇒成約、０⇒不成約）           |\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.9.4 64-bit ('3.9.4')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.4"
  },
  "vscode": {
   "interpreter": {
    "hash": "a476015a46a3902091b87632186d45efb808d6a8696d7412e7718b6e99895531"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
